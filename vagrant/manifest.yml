---
name: lattice

releases:
- name: diego
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/diego-0.tgz
- name: garden-linux
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/garden-linux-0.tgz
- name: cf-routing
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-routing-0.tgz
- name: cf-lattice
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-lattice-0.tgz

networks:
- name: default
  type: dynamic

update:
  update_watch_time: 60000 - 1200000

compilation:
  network: default

jobs:
- name: lattice-collocated
  instances: 1

  networks:
  - name: default

  templates:

  # Brain:
  - name: auctioneer
    release: diego
  - name: bbs
    release: diego
  - name: converger
    release: diego
  - name: file_server
    release: diego
  - name: etcd
    release: diego
  - name: route_emitter
    release: diego
  - name: ssh_proxy
    release: diego

  - name: haproxy
    release: cf-routing
  - name: router_configurer
    release: cf-routing
  - name: tcp_emitter
    release: cf-routing

  - name: doppler
    release: cf-lattice
  - name: gorouter
    release: cf-lattice
  - name: loggregator_trafficcontroller
    release: cf-lattice
  - name: nats
    release: cf-lattice

  # Cell:
  - name: rep
    release: diego
  - name: rootfses
    release: diego

  - name: garden
    release: garden-linux

  # Brain & Cell:
  - name: consul_agent
    release: cf-lattice
  - name: metron_agent
    release: cf-lattice

properties:

  system_domain: placeholder-system-domain

  # For Diego:
  diego:
    ssl:
      skip_cert_verify: true
    auctioneer:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    bbs:
      active_key_label: key1
      encryption_keys:
      - label: key1
        passphrase: bbs-secret
      require_ssl: false
      ca_cert: ""
      server_cert: ""
      server_key: ""
      auctioneer:
        api_url: http://auctioneer.service.cf.internal:9016
      etcd:
        machines: [etcd.service.cf.internal]
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    converger:
      bbs:
        api_location: bbs.service.cf.internal:8889
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    etcd:
      machines: etcd.service.cf.internal
      cluster:
        - name: database_z1
          instances: 1
      require_ssl: false
      peer_require_ssl: false
    rep:
      zone: z1
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    route_emitter:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      nats:
        machines: [10.0.2.15]
        user: nats
        password: nats
    ssh_proxy:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      host_key: "$(openssl genrsa 2048 2> /dev/null)"
      enable_diego_auth: true
      diego_credentials: "$(cat /var/lattice/username):$(cat /var/lattice/password)"

  # For Garden:
  garden:
    disk_quota_enabled: false
    deny_networks: [0.0.0.0/0]
    allow_host_access: true # turn off in favor of TCP routing
    insecure_docker_registry_list: []
    mount_btrfs_loopback: false
    persistent_image_list: ["/var/vcap/packages/rootfs_cflinuxfs2/rootfs"]
    enable_graph_cleanup: true
    dropsonde:
      origin: "garden-linux"
      destination: 127.0.0.1:3457

  # For CF Routing:
  router:
    router_configurer:
      gorouter_secret: router-secret
    tcp_emitter:
      debug_addr: 0.0.0.0:17019
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false

  # For CF:
  nats:
    machines: [10.0.2.15]
    user: nats
    password: nats
    port: 4222
  etcd:
    machines: [10.0.2.15]
  metron_agent:
    zone: z1
    deployment: lattice
  consul:
    agent:
      mode: server
      services:
        etcd: {}
        bbs: {}
        auctioneer: {}
        file_server: {}
        ssh_proxy: {}
        gorouter: {}
      servers:
        lan: [10.0.2.15]
    require_ssl: false
  doppler:
    zone: z1
  traffic_controller:
    zone: z1
    outgoing_port: 8084
  loggregator:
    outgoing_dropsonde_port: 8083
  metron_endpoint:
    shared_secret: loggregator-secret
  loggregator_endpoint:
    shared_secret: loggregator-secret
  doppler_endpoint:
    shared_secret: loggregator-secret
  uaa:
    url: ""
    clients:
      doppler:
        secret: doppler-secret
      gorouter:
        secret: gorouter-secret
  cc:
    srv_api_uri: ""

