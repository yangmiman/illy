---
name: lattice

releases:
- name: diego
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/diego-0.tgz
- name: garden-linux
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/garden-linux-0.tgz
- name: cf-routing
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-routing-0.tgz
- name: cf-lattice
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-lattice-0.tgz
- name: etcd
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/etcd-0.tgz

networks:
- name: default
  type: dynamic

update:
  update_watch_time: 60000 - 1200000

compilation:
  network: default

jobs:
- name: lattice-colocated
  instances: 1
  persistent_disk: 1024

  networks:
  - name: default

  templates:

  - name: auctioneer
    release: diego
  - name: bbs
    release: diego
  - name: converger
    release: diego
  - name: file_server
    release: diego
  - name: route_emitter
    release: diego
  - name: ssh_proxy
    release: diego
  - name: rep
    release: diego
  - name: rootfses
    release: diego

  - name: garden
    release: garden-linux

  - name: haproxy
    release: cf-routing
  - name: router_configurer
    release: cf-routing
  - name: tcp_emitter
    release: cf-routing
  - name: routing-api
    release: cf-routing

  - name: consul_agent
    release: cf-lattice
  - name: doppler
    release: cf-lattice
  - name: gorouter
    release: cf-lattice
  - name: loggregator_trafficcontroller
    release: cf-lattice
  - name: metron_agent
    release: cf-lattice
  - name: nats
    release: cf-lattice
  - name: uaa
    release: cf-lattice
  - name: postgres
    release: cf-lattice
  - name: cloud_controller_ng
    release: cf-lattice
  # - name: cloud_controller_worker
  #   release: cf-lattice
  # - name: cloud_controller_clock
  #   release: cf-lattice
  - name: route_registrar
    release: cf-lattice

  - name: etcd
    release: etcd

properties:
  support_address: "email@example.com"
  system_domain: placeholder-system-domain
  system_domain_organization: placeholder-system-domain-org
  app_domains: ["placeholder-system-domain"]

  # For Diego:
  diego:
    ssl:
      skip_cert_verify: true
    auctioneer:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    bbs:
      active_key_label: key1
      encryption_keys:
      - label: key1
        passphrase: bbs-secret
      require_ssl: false
      ca_cert: ""
      server_cert: ""
      server_key: ""
      auctioneer:
        api_url: http://auctioneer.service.cf.internal:9016
      etcd:
        machines: [etcd.service.cf.internal]
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    converger:
      bbs:
        api_location: bbs.service.cf.internal:8889
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    route_emitter:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      nats:
        machines: [placeholder-ip]
        user: nats
        password: nats
        port: placeholder
    ssh_proxy:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      host_key: "$(openssl genrsa 2048 2> /dev/null)"
      enable_diego_auth: true
      diego_credentials: placeholder-username:placeholder-password
    rep:
      zone: z1
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false

  # For Garden:
  garden:
    disk_quota_enabled: false
    allow_host_access: true # turn off in favor of TCP routing
    persistent_image_list: ["/var/vcap/packages/rootfs_cflinuxfs2/rootfs"]
    enable_graph_cleanup: true

  # For CF Routing:
  router:
    enable_routing_api: true
    router_configurer:
      gorouter_secret: router-secret
      routing_api_auth_disabled: true
    tcp_emitter:
      diego_api_url: http://placeholder-username:placeholder-password@receptor.service.cf.internal:8888
      gorouter_secret: router-secret
      debug_addr: 0.0.0.0:17019
      routing_api_auth_disabled: true
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false

  # For CF:
  nats:
    machines: [placeholder-ip]
    user: nats
    password: nats
    port: 4222
  etcd:
    machines: [placeholder-ip]
    require_ssl: false
    ca_cert: ""
    server_cert: ""
    server_key: ""
    client_cert: ""
    client_key: ""
    peer_require_ssl: false
    peer_ca_cert: ""
    peer_cert: ""
    peer_key: ""
    cluster:
      - name: database_z1
        instances: 1
  metron_agent:
    shared_secret: loggregator-secret
    zone: z1
    deployment: lattice
  consul:
    agent:
      mode: server
      services:
        etcd: {}
        bbs: {}
        auctioneer: {}
        file_server: {}
        ssh_proxy: {}
        gorouter: {}
        receptor: {}
        router_configurer: {}
        routing-api: {}
        uaa: {}
      servers:
        lan: [placeholder-ip]
    require_ssl: false
  doppler:
    zone: z1
  doppler_endpoint:
    shared_secret: loggregator-secret
  traffic_controller:
    zone: z1
    outgoing_port: 8084
  loggregator:
    outgoing_dropsonde_port: 8083
    etcd:
      machines: [etcd.service.cf.internal]
  loggregator_endpoint:
    shared_secret: loggregator-secret
  routing-api:
    auth_disabled: true
  domain: placeholder-system-domain
  uaa:
    port: 8085
    clients:
      doppler:
        secret: doppler-secret
      gorouter:
        secret: gorouter-secret
      login:
        secret: login-secret
      cc-service-dashboards:
        secret: cc-service-dashboard-secret
      cloud_controller_username_lookup:
        secret: cloud-controller-username-lookup-secret
    admin:
      client_secret: admin-client-secret
    cc:
      client_secret: cc-client-secret
      token_secret: cc-token-secret
    scim:
      user:
        override: true
      users:
      - admin|admin|scim.write,scim.read,openid,cloud_controller.admin,doppler.firehose
    issuer: ""
    jwt:
      verification_key: ""
    # jwt:
    #   signing_key: |
    #     -----BEGIN RSA PRIVATE KEY-----
    #     XXX
    #     -----END RSA PRIVATE KEY-----
    #   verification_key: |
    #     -----BEGIN PUBLIC KEY-----
    #     XXX
    #     -----END PUBLIC KEY-----
  route_registrar:
    routes:
    - name: doppler
      port: 8081
      uris:
      - "doppler.placeholder-system-domain"
    - name: loggregator
      port: 8084
      uris:
      - "loggregator.placeholder-system-domain"
  uaadb:
    address: localhost
    databases:
    - {name: uaadb, tag: uaa}
    db_scheme: postgresql
    port: 5524
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
  databases:
    port: 5524
    databases:
    - {name: uaadb, tag: uaa, citext: true}
    - {name: ccdb, tag: cc, citext: true}
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
    - {name: ccadmin, password: admin, tag: admin}
  cc:
    srv_api_uri: ""
    info:
      name: "lattice-cc"
      build: ""
      version: ""
      description: ""
    bulk_api_password: bulk-api-password
    internal_api_password: internal-api-password
    db_encryption_key: "db-encryption-key"
    quota_definitions:
      default:
          memory_limit: 102400
          non_basic_services_allowed: true
          total_routes: 1000
          total_services: -1
    security_group_definitions:
    - name: public_networks
      rules:
      - {destination: 0.0.0.0-9.255.255.255, protocol: all}
      - {destination: 11.0.0.0-169.253.255.255, protocol: all}
      - {destination: 169.255.0.0-172.15.255.255, protocol: all}
      - {destination: 172.32.0.0-192.167.255.255, protocol: all}
      - {destination: 192.169.0.0-255.255.255.255, protocol: all}
    - name: dns
      rules:
      - {destination: 0.0.0.0/0, ports: '53', protocol: tcp}
      - {destination: 0.0.0.0/0, ports: '53', protocol: udp}
    staging_upload_user: "staging-user"
    staging_upload_password: "staging-pass"
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
  ccdb:
    address: localhost
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: admin, tag: admin}
  login:
    catalina_opts: -Xmx768m
