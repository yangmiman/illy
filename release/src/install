#!/bin/bash

set -e

if [[ -z "$1" ]]; then
  echo "Incorrect Usage. Usage: $0 /path/to/lattice.tgz"
  exit 1
fi

/etc/init.d/lighttpd stop >/dev/null

# Overlay Lattice support files
tar xzf "$1" --strip-components 2 --keep-directory-symlink --no-overwrite-dir --no-same-owner -C / -- ./root
username=$(cat /var/lattice/username)
password=$(cat /var/lattice/password)

# Config proxy support
mkdir -p /var/lattice/lighttpd
if [[ -f /var/lattice/proxy ]]; then
  export $(cat /var/lattice/proxy)
  cat > /var/lattice/lighttpd/proxyconf.json <<JSON
{
    "http_proxy": $(echo $http_proxy | jq -R .),
    "https_proxy": $(echo $https_proxy | jq -R .),
    "no_proxy": $(echo $no_proxy | jq -R .)
}
JSON
fi

# Configure and secure lighttpd
mkdir -p /var/lattice/lighttpd/blobs
chown -R www-data:www-data /var/lattice/lighttpd
lighttpd_password=$(openssl passwd -crypt "$password")
echo $username:$lighttpd_password > /var/lattice/lighttpd.user

# Enabled receptor
ln -sf /var/vcap/jobs/receptor/monit /var/vcap/monit/job/0019_receptor.monitrc

# Modify deployed jobs for Lattice
export $(cat /var/lattice/network)
job_files=$(find /var/vcap/jobs/*/ -type f)
perl -p -i -e "s/placeholder-system-domain/$SYSTEM_DOMAIN/g" $job_files
perl -p -i -e "s/placeholder-username/$username/g" $job_files
perl -p -i -e "s/placeholder-password/$password/g" $job_files

sed -i 's%/var/vcap/packages/loggregator_trafficcontroller/trafficcontroller%& --disableAccessControl%' \
  /var/vcap/jobs/loggregator_trafficcontroller/bin/loggregator_trafficcontroller_ctl
sed -i 's%/var/vcap/packages/rep/bin/rep%/usr/local/bin/tee2metron -dropsondeDestination=127.0.0.1:3457 -sourceInstance=lattice-collocated-0 &%' \
  /var/vcap/jobs/rep/bin/rep_ctl
sed -i 's%/var/vcap/packages/garden-linux/bin/garden-linux%/usr/local/bin/tee2metron -dropsondeDestination=127.0.0.1:3457 -sourceInstance=lattice-collocated-0 &%' \
  /var/vcap/jobs/garden/bin/garden_ctl


# Start all services
rm -f /etc/init/runsvdir.override
start runsvdir >/dev/null
/etc/init.d/lighttpd start >/dev/null

echo "Waiting for services to start..."
monit_summary="/var/vcap/bosh/bin/monit summary"
started_services() { $monit_summary 2>/dev/null | grep -E '(running|accessible)' | wc -l; }
total_services() { $monit_summary 2>/dev/null | grep -E '^(Process|File|System)' | wc -l; }
while [[ $(total_services) = 0 ]] || [[ $(started_services) -lt $(total_services) ]]; do
  sleep 1
done
