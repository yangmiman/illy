#!/bin/bash

set -e

if [[ -z $1 ]] || [[ -z $2 ]]; then
    >&2 echo "Usage:"
    >&2 echo -e "\t$0 <domain> <public-ip> <service1,service2> <docker-registry1,docker-registry2>"
    exit 1
fi

exec 3>&1 4>&2 >>/var/pcfdev/provision.log 2>&1
set -x

rm -f /run/pcfdev-healthcheck

source /var/pcfdev/common

domain=$1
public_ip=$2
services=$3
registries=$4

if [[ -x /var/pcfdev/pre-run ]]; then
  /var/pcfdev/pre-run "$domain" "$services"
fi


>&3 /var/pcfdev/stop

rm -f /var/vcap/bosh/agent_state.json

# Add self-signed cert to existing trusted certs
if [[ ! -f /var/pcfdev/trusted_ca.crt ]]; then
  cp /var/vcap/jobs/cflinuxfs2-rootfs-setup/config/certs/trusted_ca.crt /var/pcfdev/trusted_ca.crt
fi
cat /var/pcfdev/trusted_ca.crt /var/vcap/jobs/gorouter/config/cert.pem > /var/vcap/jobs/cflinuxfs2-rootfs-setup/config/certs/trusted_ca.crt
/var/vcap/jobs/cflinuxfs2-rootfs-setup/bin/pre-start

# Replace the old system domain / IP with the new system domain / IP

config_files=$(find /var/vcap/jobs/*/ /var/vcap/monit/job -type f)

old_domain=$(cat /var/pcfdev/domain)
perl -p -i -e "s/\\Q$old_domain\\E/$domain/g" $config_files
echo "$domain" > /var/pcfdev/domain

sed -i '/\/proc\/sys\/net\/ipv4\/ip_local_port_range/d' /var/vcap/jobs/gorouter/bin/gorouter_ctl

# Point garden at HTTP_PROXY and HTTPS_PROXY
pcfdev_http_proxy=$(. /etc/environment && echo "$HTTP_PROXY")
pcfdev_https_proxy=$(. /etc/environment && echo "$HTTPS_PROXY")
if [[ ! -z $pcfdev_http_proxy || ! -z $pcfdev_https_proxy ]]; then
  perl -p -i -e "s/^export.*(http|https|no)_proxy=.*\n//i" /var/vcap/jobs/garden/bin/garden_ctl
  result=$(grep -i '\(http\|https\|no\)_proxy=' /etc/environment | xargs -I {} echo 'export {}\n' | tr -d '\n')
  if [[ -n "$result" ]]; then
    sed -i "/set -x/a$result" /var/vcap/jobs/garden/bin/garden_ctl
  fi
fi

# Fix CC temporary directory
mkdir -p /tmp/cc_tmp
chgrp vcap /tmp/cc_tmp
chmod 1777 /tmp/cc_tmp
cc_worker_ctl=/var/vcap/jobs/cloud_controller_ng/bin/cloud_controller_worker_ctl
grep -q 'export TMPDIR=\/tmp\/cc_tmp' "$cc_worker_ctl" || sed -i '2iexport TMPDIR=/tmp/cc_tmp' "$cc_worker_ctl"

# Add registries to insecure_docker_registries
if [[ -n "$registries" ]]; then
  perl -p -i -e "s/.*-insecureDockerRegistry=.*\n//i" /var/vcap/jobs/garden/bin/garden_ctl
  perl -p -i -e "s/.*-insecureDockerRegistry=.*\n//i" /var/vcap/jobs/stager/bin/stager_as_vcap

  insecureDockerRegistryOptions=""
  for registry in $(echo "$registries" | tr ',' '\n'); do
    insecureDockerRegistryOptions="${insecureDockerRegistryOptions}-insecureDockerRegistry=$registry "
  done

  if [[ -n "$insecureDockerRegistryOptions" ]]; then
    sed -i "/-maxContainers/a$insecureDockerRegistryOptions \\\\" /var/vcap/jobs/garden/bin/garden_ctl
    sed -i "/-dockerRegistryAddress/a$insecureDockerRegistryOptions \\\\" /var/vcap/jobs/stager/bin/stager_as_vcap
  fi
fi

>&3 2>&4 /var/pcfdev/start "$domain"

cf api "https://api.$domain" --skip-ssl-validation
cf auth admin admin

cf create-org pcfdev-org
cf create-space pcfdev-space -o pcfdev-org
cf target -o pcfdev-org -s pcfdev-space

cf create-user user pass
cf set-org-role user pcfdev-org OrgManager
cf set-space-role user pcfdev-org  pcfdev-space SpaceManager
cf set-space-role user pcfdev-org  pcfdev-space SpaceDeveloper
cf set-space-role user pcfdev-org  pcfdev-space SpaceAuditor

[[ $domain != $old_domain ]] && cf delete-shared-domain "$old_domain" -f

if [[ $(cf curl /v2/shared_domains | jq -r ".resources[] | select(.entity.name == \"tcp.$domain\").entity.name") == "" ]]
then
  cf create-shared-domain tcp.$domain --router-group default-tcp
  quota_definition_url=$(cf curl /v2/quota_definitions?q=name:default | jq -r .resources[0].metadata.url)
  cf curl $quota_definition_url -X PUT -d '{"total_routes": 100}'
  cf curl $quota_definition_url -X PUT -d '{"total_reserved_route_ports": -1}'
fi

cf enable-feature-flag diego_docker

if [[ ! -z $pcfdev_http_proxy ]] || [[ ! -z $pcfdev_https_proxy ]]; then
  proxy_environment_variables=$(
    echo -n "{"
    grep -i '\(http\|https\|no\)_proxy=' /etc/environment | sed -e 's/\(.*\)=\(.*\)/"\1": "\2"/' | paste -sd "," -
    echo -n "}"
  )
  cf set-staging-environment-variable-group "$proxy_environment_variables"
  cf set-running-environment-variable-group "$proxy_environment_variables"
fi

while [[ $(available_buildpacks) -lt 8 ]]; do
  sleep 1
done

setup_service_broker p-mysql http://mysql-broker.$domain mysql

if [[ -x /var/pcfdev/post-run ]]; then
  /var/pcfdev/post-run "$domain" "$services"
fi

set +x
exec 1>&3 2>&4
