// Automatically generated by MockGen. DO NOT EDIT!
// Source: provisioner/provisioner (interfaces: Cert)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Cert interface
type MockCert struct {
	ctrl     *gomock.Controller
	recorder *_MockCertRecorder
}

// Recorder for MockCert (not exported)
type _MockCertRecorder struct {
	mock *MockCert
}

func NewMockCert(ctrl *gomock.Controller) *MockCert {
	mock := &MockCert{ctrl: ctrl}
	mock.recorder = &_MockCertRecorder{mock}
	return mock
}

func (_m *MockCert) EXPECT() *_MockCertRecorder {
	return _m.recorder
}

func (_m *MockCert) GenerateCerts(_param0 string) ([]byte, []byte, []byte, []byte, error) {
	ret := _m.ctrl.Call(_m, "GenerateCerts", _param0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].([]byte)
	ret3, _ := ret[3].([]byte)
	ret4, _ := ret[4].(error)
	return ret0, ret1, ret2, ret3, ret4
}

func (_mr *_MockCertRecorder) GenerateCerts(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GenerateCerts", arg0)
}
