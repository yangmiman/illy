#!/bin/bash

set -e

if [[ -z $1 ]] || [[ ! -d $(dirname "$1") ]]; then
  echo "Usage:"
  echo -e "\t$0 /new/or/existing/assets/directory"
  exit 1
fi

assets_dir=$(mkdir -p "$1" && cd "$1" && pwd)
forge_dir=$(cd `dirname $0` && cd .. && pwd)
bosh_gopath=$forge_dir/bosh
packer_bosh_dir=$bosh_gopath/src/github.com/sclevine/packer-bosh
bosh_provisioner_dir=$bosh_gopath/src/github.com/sclevine/bosh-provisioner

rm -rf $assets_dir/{monit,agent}
cp -r $bosh_provisioner_dir/assets/{monit,agent} $assets_dir/

GOPATH=$packer_bosh_dir/Godeps/_workspace:$bosh_gopath \
  go build -a -o $assets_dir/packer-bosh github.com/sclevine/packer-bosh/main

GOOS=linux GOARCH=amd64 GOPATH=$bosh_provisioner_dir/Godeps/_workspace:$bosh_gopath \
  go build -a -o $assets_dir/bosh-provisioner github.com/sclevine/bosh-provisioner/main

if [[ -f $HOME/.packerconfig ]]; then
  packer_config=$(cat $HOME/.packerconfig)
  echo "Updating existing ~/.packerconfig to point to downloaded packer-bosh."
fi
packer_bosh=$assets_dir/packer-bosh
filter='. + {"provisioners": (.provisioners + {"packer-bosh": "'$packer_bosh'"})}'
echo ${packer_config:-'{}'} | jq "$filter" >$HOME/.packerconfig

