---
name: micropcf

releases:
- name: diego
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/diego-0.tgz
- name: cf
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-0.tgz
- name: garden-linux
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/garden-linux-0.tgz
- name: etcd
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/etcd-0.tgz

networks:
- name: default
  type: dynamic

update:
  update_watch_time: 60000 - 1200000

compilation:
  network: default

jobs:
- name: micropcf
  instances: 1
  persistent_disk: 1024

  networks:
  - name: default

  templates:

  - name: auctioneer
    release: diego
  - name: bbs
    release: diego
  - name: cc_uploader
    release: diego
  - name: converger
    release: diego
  - name: file_server
    release: diego
  - name: nsync
    release: diego
  - name: rep
    release: diego
  - name: rootfses
    release: diego
  - name: route_emitter
    release: diego
  - name: ssh_proxy
    release: diego
  - name: stager
    release: diego
  - name: tps
    release: diego

  - name: cloud_controller_clock
    release: cf
  - name: cloud_controller_ng
    release: cf
  - name: cloud_controller_worker
    release: cf
  - name: consul_agent
    release: cf
  - name: doppler
    release: cf
  - name: gorouter
    release: cf
  - name: loggregator_trafficcontroller
    release: cf
  - name: metron_agent
    release: cf
  - name: nats
    release: cf
  - name: postgres
    release: cf
  - name: route_registrar
    release: cf
  - name: routing-api
    release: cf
  - name: uaa
    release: cf

  - name: garden
    release: garden-linux

  - name: etcd
    release: etcd

properties:
  support_address: email@example.com
  system_domain: placeholder.system-domain
  system_domain_organization: placeholder.system-domain-org
  app_domains: [placeholder.system-domain]

  # For Diego:
  diego:
    ssl:
      skip_cert_verify: true
    nsync:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: http://cloud-controller-ng.service.cf.internal:9022
        basic_auth_password: internal-api-password
    stager:
      listen_addr: 0.0.0.0:8890
      staging_task_callback_url: http://stager.service.cf.internal:8890
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        basic_auth_password: internal-api-password
    tps:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        basic_auth_password: internal-api-password
      watcher:
        debug_addr: 0.0.0.0:17020
      listener:
        debug_addr: 0.0.0.0:17021
    auctioneer:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    bbs:
      active_key_label: key1
      encryption_keys:
      - label: key1
        passphrase: bbs-secret
      require_ssl: false
      ca_cert: ""
      server_cert: ""
      server_key: ""
      auctioneer:
        api_url: http://auctioneer.service.cf.internal:9016
      etcd:
        machines: [etcd.service.cf.internal]
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    converger:
      bbs:
        api_location: bbs.service.cf.internal:8889
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    route_emitter:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      nats:
        machines: [placeholder-ip]
        user: nats
        password: nats
    ssh_proxy:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      host_key: "$(openssl genrsa 2048 2> /dev/null)"
      enable_cf_auth: true
      uaa_token_url: "http://login.placeholder.system-domain/oauth/token"
      uaa_secret: ssh-proxy-secret
    rep:
      zone: z1
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false

  # For CF:
  nats:
    machines: [placeholder-ip]
    user: nats
    password: nats
    port: 4222
  metron_agent:
    zone: z1
    deployment: micropcf
  consul:
    agent:
      mode: server
      services:
        etcd: {}
        bbs: {}
        auctioneer: {}
        file_server: {}
        ssh_proxy: {}
        gorouter: {}
        receptor: {}
        router_configurer: {}
        routing-api: {}
        uaa: {}
        cc_uploader: {}
        nsync: {}
        stager: {}
        tps: {}
        cloud_controller_ng: {}
      servers:
        lan: [placeholder-ip]
    require_ssl: false
  doppler:
    zone: z1
  doppler_endpoint:
    shared_secret: loggregator-secret
  traffic_controller:
    zone: z1
    outgoing_port: 8084
  loggregator:
    outgoing_dropsonde_port: 8083
    etcd:
      machines: [etcd.service.cf.internal]
  loggregator_endpoint:
    shared_secret: loggregator-secret
  metron_endpoint:
    shared_secret: loggregator-secret
  domain: placeholder.system-domain
  uaa:
    catalina_opts: -Xms160m -Xmx160m -Xss1m -XX:MetaspaceSize=72m -XX:MaxMetaspaceSize=72m
    port: 8085
    clients:
      login:
        override: true
        scope: openid,oauth.approvals
        authorities: oauth.login,scim.write,clients.read,scim.userids,password.write
        secret: login-secret
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: "https://login.placeholder.system-domain"
      doppler:
        override: true
        authorities: uaa.resource
        secret: doppler-secret
      cloud_controller_username_lookup:
        authorities: scim.userids
        secret: cloud-controller-username-lookup-secret
        authorized-grant-types: client_credentials
      cc_routing:
        authorities: routing.router_groups.read
        secret: cc-routing-secret
        authorized-grant-types: client_credentials
      gorouter:
        authorities: clients.read,clients.write,clients.admin,routing.routes.write,routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        scope: openid,cloud_controller_service_permissions.read
        secret: gorouter-secret
      ssh-proxy:
        authorized-grant-types: authorization_code
        autoapprove: true
        override: true
        redirect-uri: /login
        scope: openid,cloud_controller.read,cloud_controller.write
        secret: ssh-proxy-secret
    admin:
      client_secret: admin-client-secret
    cc:
      client_secret: cc-client-secret
    scim:
      user:
        override: true
      users:
      - admin|admin|scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
    issuer: http://localhost/
    no_ssl: true
    jwt:
      signing_key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIICXAIBAAKBgQDHFr+KICms+tuT1OXJwhCUmR2dKVy7psa8xzElSyzqx7oJyfJ1
        JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMXqHxf+ZH9BL1gk9Y6kCnbM5R6
        0gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBugspULZVNRxq7veq/fzwIDAQAB
        AoGBAJ8dRTQFhIllbHx4GLbpTQsWXJ6w4hZvskJKCLM/o8R4n+0W45pQ1xEiYKdA
        Z/DRcnjltylRImBD8XuLL8iYOQSZXNMb1h3g5/UGbUXLmCgQLOUUlnYt34QOQm+0
        KvUqfMSFBbKMsYBAoQmNdTHBaz3dZa8ON9hh/f5TT8u0OWNRAkEA5opzsIXv+52J
        duc1VGyX3SwlxiE2dStW8wZqGiuLH142n6MKnkLU4ctNLiclw6BZePXFZYIK+AkE
        xQ+k16je5QJBAN0TIKMPWIbbHVr5rkdUqOyezlFFWYOwnMmw/BKa1d3zp54VP/P8
        +5aQ2d4sMoKEOfdWH7UqMe3FszfYFvSu5KMCQFMYeFaaEEP7Jn8rGzfQ5HQd44ek
        lQJqmq6CE2BXbY/i34FuvPcKU70HEEygY6Y9d8J3o6zQ0K9SYNu+pcXt4lkCQA3h
        jJQQe5uEGJTExqed7jllQ0khFJzLMx0K6tj0NeeIzAaGCQz13oo2sCdeGRHO4aDh
        HH6Qlq/6UOV5wP8+GAcCQFgRCcB+hrje8hfEEefHcFpyKH+5g1Eu1k0mLrxK2zd+
        4SlotYRHgPCEubokb2S1zfZDWIXW3HmggnGgM949TlY=
        -----END RSA PRIVATE KEY-----
      verification_key: |
        -----BEGIN PUBLIC KEY-----
        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHFr+KICms+tuT1OXJwhCUmR2d
        KVy7psa8xzElSyzqx7oJyfJ1JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMX
        qHxf+ZH9BL1gk9Y6kCnbM5R60gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBug
        spULZVNRxq7veq/fzwIDAQAB
        -----END PUBLIC KEY-----
  route_registrar:
    routes:
    - name: doppler
      port: 8081
      uris:
      - doppler.placeholder.system-domain
    - name: loggregator
      port: 8084
      uris:
      - loggregator.placeholder.system-domain
    - name: api
      port: 9022
      uris:
      - api.placeholder.system-domain
    - name: uaa
      port: 8085
      uris:
      - "uaa.placeholder.system-domain"
      - "*.uaa.placeholder.system-domain"
      - "login.placeholder.system-domain"
      - "*.login.placeholder.system-domain"
  uaadb:
    address: localhost
    databases:
    - {name: uaadb, tag: uaa}
    db_scheme: postgresql
    port: 5524
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
  databases:
    port: 5524
    databases:
    - {name: uaadb, tag: uaa, citext: true}
    - {name: ccdb, tag: cc, citext: true}
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
    - {name: ccadmin, password: admin, tag: admin}
  cc:
    default_to_diego_backend: true
    diego:
      stager_url: http://stager.service.cf.internal:8890
    srv_api_uri: http://api.placeholder.system-domain
    info:
      name: micropcf-cc
      build: ""
      version: ""
      description: ""
    bulk_api_password: bulk-api-password
    internal_api_password: internal-api-password
    db_encryption_key: db-encryption-key
    quota_definitions:
      default:
          memory_limit: 102400
          non_basic_services_allowed: true
          total_routes: 1000
          total_services: -1
    security_group_definitions:
    - name: public_networks
      rules:
      - {destination: 0.0.0.0-9.255.255.255, protocol: all}
      - {destination: 11.0.0.0-169.253.255.255, protocol: all}
      - {destination: 169.255.0.0-172.15.255.255, protocol: all}
      - {destination: 172.32.0.0-192.167.255.255, protocol: all}
      - {destination: 192.169.0.0-255.255.255.255, protocol: all}
    - name: dns
      rules:
      - {destination: 0.0.0.0/0, ports: '53', protocol: tcp}
      - {destination: 0.0.0.0/0, ports: '53', protocol: udp}
    staging_upload_user: staging-user
    staging_upload_password: staging-pass
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
    external_protocol: http
    install_buildpacks:
    - {name: java_buildpack, package: buildpack_java_offline}
    - {name: ruby_buildpack, package: buildpack_ruby}
    - {name: nodejs_buildpack, package: buildpack_nodejs}
    - {name: go_buildpack, package: buildpack_go}
    - {name: python_buildpack, package: buildpack_python}
    - {name: php_buildpack, package: buildpack_php}
    - {name: staticfile_buildpack, package: buildpack_staticfile}
    - {name: binary_buildpack, package: buildpack_binary}
  ccdb:
    address: localhost
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: admin, tag: admin}
  login:
    protocol: http
  router:
    debug_addr: 0.0.0.0:17003
    enable_ssl: true
    ssl_cert: |
      -----BEGIN CERTIFICATE-----
      MIIDBjCCAe4CCQCz3nn1SWrDdTANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJB
      VTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50ZXJuZXQgV2lkZ2l0
      cyBQdHkgTHRkMB4XDTE1MDMwMzE4NTMyNloXDTE2MDMwMjE4NTMyNlowRTELMAkG
      A1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNVBAoTGEludGVybmV0
      IFdpZGdpdHMgUHR5IEx0ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
      AKtTK9xq/ycRO3fWbk1abunYf9CY6sl0Wlqm9UPMkI4j0itY2OyGyn1YuCCiEdM3
      b8guGSWB0XSL5PBq33e7ioiaH98UEe+Ai+TBxnJsro5WQ/TMywzRDhZ4E7gxDBav
      88ZY+y7ts0HznfxqEIn0Gu/UK+s6ajYcIy7d9L988+hA3K1FSdes8MavXhrI4xA1
      fY21gESfFkD4SsqvrkISC012pa7oVw1f94slIVcAG+l9MMAkatBGxgWAQO6kxk5o
      oH1Z5q2m0afeQBfFqzu5lCITLfgTWCUZUmbF6UpRhmD850/LqNtryAPrLLqXxdig
      OHiWqvFpCusOu/4z1uGC5xECAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAV5RAFVQy
      8Krs5c9ebYRseXO6czL9/Rfrt/weiC1XLcDkE2i2yYsBXazMYr58o4hACJwe2hoC
      bihBZ9XnVpASEYHDLwDj3zxFP/bTuKs7tLhP7wz0lo8i6k5VSPAGBq2kjc/cO9a3
      TMmLPks/Xm42MCSWGDnCEX1854B3+JK3CNEGqSY7FYXU4W9pZtHPZ3gBoy0ymSpg
      mpleiY1Tbn5I2X7vviMW7jeviB5ivkZaXtObjyM3vtPLB+ILpa15ZhDSE5o71sjA
      jXqrE1n5o/GXHX+1M8v3aJc30Az7QAqWohW/tw5SoiSmVQZWd7gFht9vSzaH2WgO
      LwcpBC7+cUJEww==
      -----END CERTIFICATE-----
    ssl_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEAq1Mr3Gr/JxE7d9ZuTVpu6dh/0JjqyXRaWqb1Q8yQjiPSK1jY
      7IbKfVi4IKIR0zdvyC4ZJYHRdIvk8Grfd7uKiJof3xQR74CL5MHGcmyujlZD9MzL
      DNEOFngTuDEMFq/zxlj7Lu2zQfOd/GoQifQa79Qr6zpqNhwjLt30v3zz6EDcrUVJ
      16zwxq9eGsjjEDV9jbWARJ8WQPhKyq+uQhILTXalruhXDV/3iyUhVwAb6X0wwCRq
      0EbGBYBA7qTGTmigfVnmrabRp95AF8WrO7mUIhMt+BNYJRlSZsXpSlGGYPznT8uo
      22vIA+ssupfF2KA4eJaq8WkK6w67/jPW4YLnEQIDAQABAoIBAQCDVqpcOoZKK9K8
      Bt3eXQKEMJ2ji2cKczFFJ5MEm9EBtoJLCryZbqfSue3Fzpj9pBUEkBpk/4VT5F7o
      0/Vmc5Y7LHRcbqVlRtV30/lPBPQ4V/eWtly/AZDcNsdfP/J1fgPSvaoqCr2ORLWL
      qL/vEfyIeM4GcWy0+JMcPbmABslw9O6Ptc5RGiP98vCLHQh/++sOtj6PH1pt+2X/
      Uecv3b1Hk/3Oe+M8ySorJD3KA94QTRnKX+zubkxRg/zCAki+as8rQc/d+BfVG698
      ylUT5LVLNuwbWnffY2Zt5x5CDqH01mJnHmxzQEfn68rb3bGFaYPEn9EP+maQijv6
      SsUM9A3lAoGBAODRDRn4gEIxjPICp6aawRrMDlRc+k6IWDF7wudjxJlaxFr2t7FF
      rFYm+jrcG6qMTyq+teR8uHpcKm9X8ax0L6N6gw5rVzIeIOGma/ZuYIYXX2XJx5SW
      SOas1xW6qEIbOMv+Xu9w2SWbhTgyRmtlxxjr2e7gQLz9z/vuTReJpInnAoGBAMMW
      sq5lqUfAQzqxlhTobQ7tnB48rUQvkGPE92SlDj2TUt9phek2/TgRJT6mdcozvimt
      JPhxKg3ioxG8NPmN0EytjpSiKqlxS1R2po0fb75vputfpw16Z8/2Vik+xYqNMTLo
      SpeVkHu7fbtNYEK2qcU44OyOZ/V+5Oo9TuBIFRhHAoGACkqHhwDRHjaWdR2Z/w5m
      eIuOvF3lN2MWZm175ouynDKDeoaAsiS2VttB6R/aRFxX42UHfoYXC8LcTmyAK5zF
      8X3SMf7H5wtqBepQVt+Gm5zGSSqLcEnQ3H5c+impOh105CGoxt0rk4Ui/AeRIalv
      C70AJOcvD3eu5aFq9gDe/1ECgYBAhkVbASzYGnMh+pKVH7rScSxto8v6/XBYT1Ez
      7JOlMhD667/qvtFJtgIHkq7qzepbhnTv5x3tscQVnZY34/u9ILpD1s8dc+dibEvx
      6S/gYLVorB5ois/DLMqaobRcew6Gs+XX9RPwmLahOJpZ9mh4XrOmCgPAYtP71YM9
      ExpHCQKBgQCMMDDWGMRdFMJgXbx1uMere7OoniBdZaOexjbglRh1rMVSXqzBoU8+
      yhEuHGAsHGWQdSBHnqRe9O0Bj/Vlw2VVEaJeL1ewRHb+jXSnuKclZOJgMsJAvgGm
      SOWIahDrATA4g1T6yLBWQPhj3ZXD3eCMxT1Q3DvpG1DjgvXwmXQJAA==
      -----END RSA PRIVATE KEY-----
    ssl_skip_validation: true

  # For Garden:
  garden:
    deny_networks:
    - 0.0.0.0/0

  # For ETCd:
  etcd:
    machines: [placeholder-ip]
    require_ssl: false
    ca_cert: ""
    server_cert: ""
    server_key: ""
    client_cert: ""
    client_key: ""
    peer_require_ssl: false
    peer_ca_cert: ""
    peer_cert: ""
    peer_key: ""
    cluster:
      - name: database_z1
        instances: 1
