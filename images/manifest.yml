---
name: micropcf

releases:
- name: diego
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/diego-0.tgz
- name: cf
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/cf-0.tgz
- name: garden-linux
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/garden-linux-0.tgz
- name: etcd
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/etcd-0.tgz
- name: uaa
  version: 0
  url: file:///opt/bosh-provisioner/assets/releases/uaa-0.tgz

networks:
- name: default
  type: dynamic

update:
  update_watch_time: 60000 - 1200000

compilation:
  network: default

jobs:
- name: micropcf
  instances: 1
  persistent_disk: 1024

  networks:
  - name: default

  templates:

  - name: auctioneer
    release: diego
  - name: bbs
    release: diego
  - name: cc_uploader
    release: diego
  - name: converger
    release: diego
  - name: file_server
    release: diego
  - name: nsync
    release: diego
  - name: rep
    release: diego
  - name: rootfses
    release: diego
  - name: route_emitter
    release: diego
  - name: ssh_proxy
    release: diego
  - name: stager
    release: diego
  - name: tps
    release: diego

  - name: cloud_controller_clock
    release: cf
  - name: cloud_controller_ng
    release: cf
  - name: cloud_controller_worker
    release: cf
  - name: consul_agent
    release: cf
  - name: doppler
    release: cf
  - name: gorouter
    release: cf
  - name: loggregator_trafficcontroller
    release: cf
  - name: metron_agent
    release: cf
  - name: nats
    release: cf
  - name: postgres
    release: cf
  - name: route_registrar
    release: cf
  - name: routing-api
    release: cf
  - name: uaa
    release: uaa

  - name: garden
    release: garden-linux

  - name: etcd
    release: etcd

properties:
  support_address: email@example.com
  system_domain: local.micropcf.io
  system_domain_organization: micropcf-org
  app_domains: [local.micropcf.io]

  # For Diego:
  diego:
    ssl:
      skip_cert_verify: true
    nsync:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: http://cloud-controller-ng.service.cf.internal:9022
        basic_auth_password: internal-api-password
    stager:
      listen_addr: 0.0.0.0:8890
      staging_task_callback_url: http://stager.service.cf.internal:8890
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        basic_auth_password: internal-api-password
    tps:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        basic_auth_password: internal-api-password
      watcher:
        debug_addr: 0.0.0.0:17020
      listener:
        debug_addr: 0.0.0.0:17021
      traffic_controller_url: wss://doppler.local.micropcf.io:443
    auctioneer:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    bbs:
      active_key_label: key1
      encryption_keys:
      - label: key1
        passphrase: bbs-secret
      require_ssl: false
      ca_cert: ""
      server_cert: ""
      server_key: ""
      auctioneer:
        api_url: http://auctioneer.service.cf.internal:9016
      etcd:
        machines: [etcd.service.cf.internal]
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    converger:
      bbs:
        api_location: bbs.service.cf.internal:8889
        require_ssl: false
        ca_cert: ""
        client_cert: ""
        client_key: ""
    route_emitter:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      nats:
        machines: [placeholder-ip]
        user: nats
        password: nats
    ssh_proxy:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      host_key: "$(openssl genrsa 2048 2> /dev/null)"
      enable_cf_auth: true
      uaa_token_url: "http://login.local.micropcf.io/oauth/token"
      uaa_secret: ssh-proxy-secret
    rep:
      zone: z1
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false

  # For CF:
  nats:
    machines: [placeholder-ip]
    user: nats
    password: nats
    port: 4222
  metron_agent:
    zone: z1
    deployment: micropcf
  consul:
    agent:
      mode: server
      services:
        etcd: {}
        bbs: {}
        auctioneer: {}
        file_server: {}
        ssh_proxy: {}
        gorouter: {}
        receptor: {}
        router_configurer: {}
        routing-api: {}
        uaa: {}
        cc_uploader: {}
        nsync: {}
        stager: {}
        tps: {}
        cloud_controller_ng: {}
      servers:
        lan: [placeholder-ip]
    require_ssl: false
  doppler:
    zone: z1
    outgoing_port: 8083
  doppler_endpoint:
    shared_secret: loggregator-secret
  traffic_controller:
    zone: z1
    outgoing_port: 8084
  loggregator:
    doppler_port: 8083
    etcd:
      machines: [etcd.service.cf.internal]
  loggregator_endpoint:
    shared_secret: loggregator-secret
  metron_endpoint:
    shared_secret: loggregator-secret
  domain: local.micropcf.io
  uaa:
    catalina_opts: -Xms160m -Xmx160m -Xss1m -XX:MetaspaceSize=72m -XX:MaxMetaspaceSize=72m
    port: 8085
    clients:
      login:
        override: true
        scope: openid,oauth.approvals
        authorities: oauth.login,scim.write,clients.read,scim.userids,password.write
        secret: login-secret
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: "https://login.local.micropcf.io"
      doppler:
        override: true
        authorities: uaa.resource
        secret: doppler-secret
      cloud_controller_username_lookup:
        authorities: scim.userids
        secret: cloud-controller-username-lookup-secret
        authorized-grant-types: client_credentials
      cc_routing:
        authorities: routing.router_groups.read
        secret: cc-routing-secret
        authorized-grant-types: client_credentials
      gorouter:
        authorities: clients.read,clients.write,clients.admin,routing.routes.write,routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        scope: openid,cloud_controller_service_permissions.read
        secret: gorouter-secret
      ssh-proxy:
        authorized-grant-types: authorization_code
        autoapprove: true
        override: true
        redirect-uri: /login
        scope: openid,cloud_controller.read,cloud_controller.write
        secret: ssh-proxy-secret
    admin:
      client_secret: admin-client-secret
    cc:
      client_secret: cc-client-secret
    scim:
      user:
        override: true
      users:
      - admin|admin|scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
    issuer: http://localhost/
    no_ssl: true
    jwt:
      signing_key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIICXAIBAAKBgQDHFr+KICms+tuT1OXJwhCUmR2dKVy7psa8xzElSyzqx7oJyfJ1
        JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMXqHxf+ZH9BL1gk9Y6kCnbM5R6
        0gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBugspULZVNRxq7veq/fzwIDAQAB
        AoGBAJ8dRTQFhIllbHx4GLbpTQsWXJ6w4hZvskJKCLM/o8R4n+0W45pQ1xEiYKdA
        Z/DRcnjltylRImBD8XuLL8iYOQSZXNMb1h3g5/UGbUXLmCgQLOUUlnYt34QOQm+0
        KvUqfMSFBbKMsYBAoQmNdTHBaz3dZa8ON9hh/f5TT8u0OWNRAkEA5opzsIXv+52J
        duc1VGyX3SwlxiE2dStW8wZqGiuLH142n6MKnkLU4ctNLiclw6BZePXFZYIK+AkE
        xQ+k16je5QJBAN0TIKMPWIbbHVr5rkdUqOyezlFFWYOwnMmw/BKa1d3zp54VP/P8
        +5aQ2d4sMoKEOfdWH7UqMe3FszfYFvSu5KMCQFMYeFaaEEP7Jn8rGzfQ5HQd44ek
        lQJqmq6CE2BXbY/i34FuvPcKU70HEEygY6Y9d8J3o6zQ0K9SYNu+pcXt4lkCQA3h
        jJQQe5uEGJTExqed7jllQ0khFJzLMx0K6tj0NeeIzAaGCQz13oo2sCdeGRHO4aDh
        HH6Qlq/6UOV5wP8+GAcCQFgRCcB+hrje8hfEEefHcFpyKH+5g1Eu1k0mLrxK2zd+
        4SlotYRHgPCEubokb2S1zfZDWIXW3HmggnGgM949TlY=
        -----END RSA PRIVATE KEY-----
      verification_key: |
        -----BEGIN PUBLIC KEY-----
        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHFr+KICms+tuT1OXJwhCUmR2d
        KVy7psa8xzElSyzqx7oJyfJ1JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMX
        qHxf+ZH9BL1gk9Y6kCnbM5R60gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBug
        spULZVNRxq7veq/fzwIDAQAB
        -----END PUBLIC KEY-----
  route_registrar:
    routes:
    - name: doppler
      port: 8081
      uris:
      - doppler.local.micropcf.io
    - name: loggregator
      port: 8084
      uris:
      - loggregator.local.micropcf.io
    - name: api
      port: 9022
      uris:
      - api.local.micropcf.io
    - name: uaa
      port: 8085
      uris:
      - "uaa.local.micropcf.io"
      - "*.uaa.local.micropcf.io"
      - "login.local.micropcf.io"
      - "*.login.local.micropcf.io"
  uaadb:
    address: localhost
    databases:
    - {name: uaadb, tag: uaa}
    db_scheme: postgresql
    port: 5524
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
  databases:
    port: 5524
    databases:
    - {name: uaadb, tag: uaa, citext: true}
    - {name: ccdb, tag: cc, citext: true}
    roles:
    - {name: uaaadmin, password: admin, tag: admin}
    - {name: ccadmin, password: admin, tag: admin}
  cc:
    default_to_diego_backend: true
    diego:
      stager_url: http://stager.service.cf.internal:8890
    srv_api_uri: http://api.local.micropcf.io
    info:
      name: micropcf-cc
      build: ""
      version: ""
      description: ""
    bulk_api_password: bulk-api-password
    internal_api_password: internal-api-password
    db_encryption_key: db-encryption-key
    quota_definitions:
      default:
          memory_limit: 102400
          non_basic_services_allowed: true
          total_routes: 1000
          total_services: -1
    security_group_definitions:
    - name: public_networks
      rules:
      - {destination: 0.0.0.0-9.255.255.255, protocol: all}
      - {destination: 11.0.0.0-169.253.255.255, protocol: all}
      - {destination: 169.255.0.0-172.15.255.255, protocol: all}
      - {destination: 172.32.0.0-192.167.255.255, protocol: all}
      - {destination: 192.169.0.0-255.255.255.255, protocol: all}
    - name: dns
      rules:
      - {destination: 0.0.0.0/0, ports: '53', protocol: tcp}
      - {destination: 0.0.0.0/0, ports: '53', protocol: udp}
    staging_upload_user: staging-user
    staging_upload_password: staging-pass
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
    external_protocol: http
    install_buildpacks:
    - {name: java_buildpack, package: buildpack_java_offline}
    - {name: ruby_buildpack, package: buildpack_ruby}
    - {name: nodejs_buildpack, package: buildpack_nodejs}
    - {name: go_buildpack, package: buildpack_go}
    - {name: python_buildpack, package: buildpack_python}
    - {name: php_buildpack, package: buildpack_php}
    - {name: staticfile_buildpack, package: buildpack_staticfile}
    - {name: binary_buildpack, package: buildpack_binary}
  ccdb:
    address: localhost
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: admin, tag: admin}
  login:
    protocol: http
  router:
    debug_addr: 0.0.0.0:17003
    enable_ssl: true
    ssl_cert: |
      -----BEGIN CERTIFICATE-----
      MIID4DCCAsgCCQD5nvXs/RLHXTANBgkqhkiG9w0BAQUFADCBsTELMAkGA1UEBhMC
      VVMxETAPBgNVBAgTCE5ldyBZb3JrMREwDwYDVQQHEwhOZXcgWW9yazEeMBwGA1UE
      ChMVUGl2b3RhbCBTb2Z0d2FyZSwgSW5jMRYwFAYDVQQLEw1DbG91ZCBGb3VuZHJ5
      MRwwGgYDVQQDFBMqLmxvY2FsLm1pY3JvcGNmLmlvMSYwJAYJKoZIhvcNAQkBFhdt
      aWNyb3BjZi1lbmdAcGl2b3RhbC5pbzAeFw0xNTEyMzAxNjM2MTBaFw0yNTEyMjcx
      NjM2MTBaMIGxMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlvcmsxETAPBgNV
      BAcTCE5ldyBZb3JrMR4wHAYDVQQKExVQaXZvdGFsIFNvZnR3YXJlLCBJbmMxFjAU
      BgNVBAsTDUNsb3VkIEZvdW5kcnkxHDAaBgNVBAMUEyoubG9jYWwubWljcm9wY2Yu
      aW8xJjAkBgkqhkiG9w0BCQEWF21pY3JvcGNmLWVuZ0BwaXZvdGFsLmlvMIIBIjAN
      BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz3O/fTyHHyAbry1Vo48Cx/dr0Ik1
      9EJDQ1uKMO8c5GPZI8ppiQx29sLAd4ZI5qAU+jzDaFXkYVx/15joaCK395AKhKLW
      fQv6DRyBu4EvtllOptT4LkDC/MP9hwr5lO1X3b1FOjFyg3KbrXlEio+T3I0nlwbg
      yAbeiweIFbcbErhJQXVlepjZ7MLIbAWAsSfazcjUER24IRQ+03x8hftACa7PRTqp
      fEN6JWsoJdhRVU17ooOQzDBYIO1R9cpfqhKIvzJ8Bx3N7Mun5nFbfr42hsKrsXlp
      oRzCdqw7YtNZFZFI0izOLno1LjvLuLaviQLORCR7lyDp4losjh5ZfhTPpwIDAQAB
      MA0GCSqGSIb3DQEBBQUAA4IBAQCjmWag8W7WHAzx9G2P1GpDOnmqBDx6YDWJpJeo
      mf9R24fWMwKSI+qq7Fb5ZmQlxfoqesbSjTxOGOMORPelMxNV7mTSPBwxBvMaQSoV
      9uaIX5yTrVMPHA8TJEOd5Ug4Pe11kiATOkuq6cgU/zOI3wWLHN97XR6Z1WbNMJ69
      ae1i13OmtNNpyErLa2at+GHW/haO1KpLb9+r1LLAMpfIwXtNPutXsl25vj0tkx8D
      vsvn9sB+zy4IiYbppTwt2/FSp38Fg16xjPsgX+cUfe8PuvlB8sFLYz8IcnVchMET
      xqzQdF/m+kFSmxAYUjb1rriQlHUDBGn3c7CP5YjOg6FpR/m+
      -----END CERTIFICATE-----
    ssl_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEAz3O/fTyHHyAbry1Vo48Cx/dr0Ik19EJDQ1uKMO8c5GPZI8pp
      iQx29sLAd4ZI5qAU+jzDaFXkYVx/15joaCK395AKhKLWfQv6DRyBu4EvtllOptT4
      LkDC/MP9hwr5lO1X3b1FOjFyg3KbrXlEio+T3I0nlwbgyAbeiweIFbcbErhJQXVl
      epjZ7MLIbAWAsSfazcjUER24IRQ+03x8hftACa7PRTqpfEN6JWsoJdhRVU17ooOQ
      zDBYIO1R9cpfqhKIvzJ8Bx3N7Mun5nFbfr42hsKrsXlpoRzCdqw7YtNZFZFI0izO
      Lno1LjvLuLaviQLORCR7lyDp4losjh5ZfhTPpwIDAQABAoIBAFHtamBxOQPH0Gcc
      RkfzwKtsQT34EkDGsn21dxvgMs7Xx/dkhs1DCPBm9U++zqeV7PLucFWSJkF1IF/q
      2U3W+ERitGSxUnfL9RKcgXeli0w+dNtaHDFYDil41XUxlmOEYEEH8IEM6iaTanvV
      +oWmMkTV0h7I7pjQba8GaG37BEwdmXpuIBe6I+ifootWup2eL5f9hXkxNqUNEY9Z
      UZN30i7hgoelHC+LfzCa7vpfY7wBRHgA33utvsDUddf+h90mZhXowlAD/CptZqbz
      u2Fv/6zDQZNVNVPjfUKHf/pOR/E7dDJGbxqNJenFnDmRn3yh+emeg8/70SpBNvf7
      wWynq7ECgYEA50KsnbfoZPsESQSZ0t70SixEvNjk5mXu9ZqcBxetH//TwbXSoqk7
      dyrONCIz9AO7lOIPuZEHR+DYDrIbLSNuphH34A0hYIPlIXPBPim1MKVai82z5lAK
      /nIs4pOPBpwdcS9VnhmpvWEIcslnI/xIZnzznqJB7wDhKPOBxtfrd30CgYEA5aUO
      gcrvpPe5C8mveP/eznfN5ylwHJ+Xj6RsXkcuorE3FccyBfKMG/Fkt4H3gfD2zhxJ
      l156o/ouUesdwsezbAVKWoeaYrQdxBDSeQfFxcx85HVhNhOZLrjSzXJeHZT5sY7p
      7Xcb6YoavQ9hBaRpoTWhSlOmkeWBJvZksb4RNPMCgYEAp+cSqJgD1H0jSVhbzmwt
      dUTayzm2R0kuy4brTYL1IUx+lB/MxGiWUhj0CYnjqoCjSp8ux43yeU9XzqOlc4pM
      JaraCwO9ffOFAlqmrNlfQehr6yD4QnlO4hpHWGHF8Aicn7a8NMNxJ5wxpBVyGwBq
      GG8T+dLYiAxdbXwOdy4BOYkCgYEA3gbmbsDJUAMeSvJVkDQ6s/6K+dtLhLEcNQnw
      qHpD8ZJLQugTSkLGCeIq0W174osZ5A7fa9Ux18Zz8EnUvVSc+WxoBf0jXBjuynjF
      NbU5FtNtUOjX8xOhv9V8IpxXuFwnye715tyJBRO8ZFwxHuZmJjIW3ijgXCC77PK+
      SkcMldcCgYB4DLCEAaUhnQHUUoUQ+f5XBJFOOcd+OdzTdNm/2BqTPc3rzjY8sRpC
      aRx74wMdupptTHsZ6i1PL+FkH6RTZJLBJrroQTS1+nFWBwDhFoed7BhWVgos3wjs
      BzSu7f3Z320nKnJMGeoBTyWW9mPdpzNnovztPlcQo25PcnNxf2V57Q==
      -----END RSA PRIVATE KEY-----
    ssl_skip_validation: true
  routing-api:
    debug_address: 0.0.0.0:17022

  # For Garden:
  garden:
    deny_networks:
    - 0.0.0.0/0

  # For ETCd:
  etcd:
    machines: [placeholder-ip]
    require_ssl: false
    ca_cert: ""
    server_cert: ""
    server_key: ""
    client_cert: ""
    client_key: ""
    peer_require_ssl: false
    peer_ca_cert: ""
    peer_cert: ""
    peer_key: ""
    cluster:
      - name: database_z1
        instances: 1
