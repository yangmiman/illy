#!/bin/bash

set -e

domain=$1

job_files=$(find /var/vcap/jobs/*/ /var/vcap/monit/job -type f)
old_ip=$(cat /var/micropcf/ip)
new_ip=$(ip route get 1 | awk '{print $NF;exit}')

perl -p -i -e "s/\\Q$old_ip\\E/$new_ip/g" $job_files
perl -p -i -e "s/placeholder\.system-domain/$domain/g" $job_files
echo $domain > /var/micropcf/domain

sed -i "s%#\!/bin/bash%#\!/bin/bash\n\nmkdir -p /tmp/cctmp\nchown 0:vcap /tmp/cctmp||true\nchmod 1777 /tmp/cctmp||true\nexport TMPDIR=/tmp/cctmp%" \
  /var/vcap/jobs/cloud_controller_ng/bin/cloud_controller_worker_ctl

rm -rf /var/vcap/store/*
rm -f /etc/init/runsvdir.override
start runsvdir >/dev/null

echo "Waiting for services to start..."
monit_summary="/var/vcap/bosh/bin/monit summary"
started_services() { $monit_summary 2>/dev/null | grep -E '(running|accessible|Timestamp changed|PID changed)' | wc -l; }
total_services() { $monit_summary 2>/dev/null | grep -E '^(Process|File|System)' | wc -l; }
while [[ $(total_services) = 0 ]] || [[ $(started_services) -lt $(total_services) ]]; do
  sleep 1
done

response=000
while [[ "$response" != "200" ]]; do
  sleep 1
  response=$(curl -s -o /dev/null -I -w %{http_code} http://api.$domain/v2/info)
done

if [ -f "/var/vcap/jobs/broker-registrar/bin/run" ]; then
  /var/vcap/jobs/broker-registrar/bin/run > /dev/null
fi

cf api api.$domain --skip-ssl-validation >/dev/null
cf auth admin admin >/dev/null
cf rename-org $domain-org micropcf-org >/dev/null
cf create-space micropcf-space -o micropcf-org >/dev/null
cf target -o micropcf-org -s micropcf-space >/dev/null
cf enable-feature-flag diego_docker >/dev/null

echo "MicroPCF is now running."
echo "To begin using MicroPCF, please run:"
echo -e "\tcf api api.$domain --skip-ssl-validation"
echo -e "\tcf login"
echo "Email: admin"
echo "Password: admin"
