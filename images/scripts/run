#!/bin/bash

set -e

if [[ -z $1 ]] || [[ -z $2 ]]; then
    >&2 echo "Usage:"
    >&2 echo -e "\t$0 <domain> <public-ip> <service1,service2>"
    exit 1
fi

exec 3>&1 4>&2 >>/var/pcfdev/run.log 2>&1
set -x

rm -f /run/pcfdev-healthcheck

source /var/pcfdev/common

domain=$1
public_ip=$2
services=$3

if [[ -x /var/pcfdev/pre-run ]]; then
  >&3 /var/pcfdev/pre-run "$domain" "$services"
fi

total=$(total_services)
if [[ $total != 0 ]] && [[ $(started_service_count) = $total ]] && [[ $(cc_status_code "$domain") = 200 ]]; then
  >&3 /var/pcfdev/help-text "$domain"
  exit 0
fi

if status runsvdir | grep -q 'start/running'; then
  wait_for_monit_to_start
  $monit stop all

  >&3 echo "Waiting for services to stop..."

  wait_for_services_to_stop
  stop runsvdir
  wait_for_monit_to_stop
fi

service dnsmasq stop

nginx -s stop || true

rm -f /var/vcap/bosh/agent_state.json

config_files=$(find /var/vcap/jobs/*/ /var/vcap/monit/job -type f)

ip=$(ip route get 1 | awk '{print $NF;exit}')
old_ip=$(cat /var/pcfdev/ip)
ip_with_commas=$(echo $ip | tr '.' ',')
old_ip_with_commas=$(echo $old_ip | tr '.' ',')
perl -p -i -e "s/\\Q$old_ip\\E/$ip/g" $config_files
perl -p -i -e "s/\\Q$old_ip_with_commas\\E/$ip_with_commas/g" $config_files
echo $ip > /var/pcfdev/ip

old_domain=$(cat /var/pcfdev/domain)
perl -p -i -e "s/\\Q$old_domain\\E/$domain/g" $config_files
echo $domain > /var/pcfdev/domain

resolvconf --disable-updates

echo "address=/.$domain/$public_ip" > /etc/dnsmasq.d/domain
echo "listen-address=$ip" > /etc/dnsmasq.d/interface

host_ns="$(grep -v "nameserver \($ip\|$old_ip\|127.0.0.1\)" /etc/resolv.conf | grep -m 1 '^nameserver' || true)"
cat <<EOF >/etc/resolv.conf
nameserver 127.0.0.1
nameserver $ip
$host_ns
EOF

service dnsmasq start

sed -i '/\/proc\/sys\/net\/ipv4\/ip_local_port_range/d' /var/vcap/jobs/gorouter/bin/gorouter_ctl

# Update proxy configuration in garden_ctl script with values from /etc/environment
pcfdev_http_proxy=$(. /etc/environment && echo "$HTTP_PROXY")
pcfdev_https_proxy=$(. /etc/environment && echo "$HTTPS_PROXY")

if [[ ! -z $pcfdev_http_proxy || ! -z $pcfdev_https_proxy ]]; then
  perl -p -i -e "s/^export.*(http|https|no)_proxy=.*\n//i" /var/vcap/jobs/garden/bin/garden_ctl
  result=$(grep -i '\(http\|https\|no\)_proxy=' /etc/environment | xargs -I {} echo 'export {}\n' | tr -d '\n')
  if [[ -n "$result" ]]; then
    sed -i "/set -x/a$result" /var/vcap/jobs/garden/bin/garden_ctl
  fi
fi

mkdir -p /tmp/cc_tmp
chgrp vcap /tmp/cc_tmp
chmod 1777 /tmp/cc_tmp

cc_worker_ctl=/var/vcap/jobs/cloud_controller_ng/bin/cloud_controller_worker_ctl
grep -q 'export TMPDIR=\/tmp\/cc_tmp' "$cc_worker_ctl" || sed -i '2iexport TMPDIR=/tmp/cc_tmp' "$cc_worker_ctl"

if [[ $CF_ONLY = true ]]; then
  pushd /var/vcap/monit/job
    rm -f \
      *_rabbitmq-server.monitrc \
      *_rabbitmq-broker.monitrc \
      *_cf-mysql-broker.monitrc \
      *_cf-redis-broker.monitrc \
      *_syslog-configurator.monitrc
  popd
  rm -f /var/pcfdev/post-run
fi

>&3 echo "Waiting for services to start..."

start runsvdir

wait_for_monit_to_start

start_services consul_agent mariadb_ctrl galera-healthcheck garden etcd
start_services cloud_controller_migration
start_remaining

total=$(total_services)

while started=$(started_service_count) && [[ $started -lt $total ]]; do
  counter=$(($counter + 1))
  [[ $(($counter % 60)) = 0 ]] && >&3 echo "$started out of $total running"
  sleep 1
done
>&3 echo "$total out of $total running"

while [[ $(cc_status_code "$domain") != 200 ]]; do
  sleep 1
done

while [[ $(uaa_response "$domain") != "ok" ]]; do
  sleep 1
done

cf api "https://api.$domain" --skip-ssl-validation
cf auth admin admin

cf create-org pcfdev-org
cf create-space pcfdev-space -o pcfdev-org
cf target -o pcfdev-org -s pcfdev-space

cf create-user user pass
cf set-org-role user pcfdev-org OrgManager
cf set-space-role user pcfdev-org  pcfdev-space SpaceManager
cf set-space-role user pcfdev-org  pcfdev-space SpaceDeveloper
cf set-space-role user pcfdev-org  pcfdev-space SpaceAuditor

[[ $domain != $old_domain ]] && cf delete-shared-domain "$old_domain" -f

cf enable-feature-flag diego_docker

if [[ ! -z $pcfdev_http_proxy || ! -z $pcfdev_https_proxy ]]; then
  proxy_environment_variables=$(
    echo -n "{"
    grep -i '\(http\|https\|no\)_proxy=' /etc/environment | sed -e 's/\(.*\)=\(.*\)/"\1": "\2"/' | paste -sd "," -
    echo -n "}"
  )
  cf set-staging-environment-variable-group "$proxy_environment_variables"
  cf set-running-environment-variable-group "$proxy_environment_variables"
fi

while [[ $(available_buildpacks) -lt 8 ]]; do
  sleep 1
done

setup_service_broker p-mysql http://mysql-broker.$domain mysql

if [[ -x /var/pcfdev/post-run ]]; then
  /var/pcfdev/post-run $domain $services
fi

set +x
exec 1>&3 2>&4

touch /run/pcfdev-healthcheck

/var/pcfdev/help-text $domain
